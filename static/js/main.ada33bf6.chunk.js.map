{"version":3,"sources":["types/Select.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Select","TodoList","todos","onSelectTodo","selectedTodoId","className","map","todo","id","title","completed","userId","isSelectedTodo","classNames","type","onClick","TodoFilter","onSelect","onChange","useState","All","selectedOption","setSelectedOption","query","setQuery","useEffect","value","event","target","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","resetTodo","user","setUser","getUser","href","email","name","App","setTodos","isLoadingTodos","setIsLoadigTodos","selectedTodo","setSelectedTodo","select","setSelect","input","setInput","handleSelectingTodo","useCallback","loadTodos","a","data","handleSelectedTodos","useMemo","visibleTodos","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ada33bf6.chunk.js","sourcesContent":["export enum Select {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  onSelectTodo: (todo: Todo) => void;\n  selectedTodoId: number | undefined;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n            userId,\n          } = todo;\n\n          const isSelectedTodo = selectedTodoId === id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': isSelectedTodo,\n              })}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    onSelectTodo({\n                      id, title, completed, userId,\n                    });\n                  }}\n                >\n                  <span className=\"icon\">\n                    {isSelectedTodo\n                      ? <i className=\"far fa-eye-slash\" />\n                      : <i className=\"far fa-eye\" />}\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Select } from '../../types/Select';\n\ninterface Props {\n  onSelect: (value: Select) => void;\n  onChange: (value: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({ onSelect, onChange }) => {\n  const [selectedOption, setSelectedOption] = useState(Select.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    onSelect(selectedOption);\n    onChange(query);\n  }, [selectedOption, query]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={(event) => (\n              setSelectedOption(event.target.value as Select))}\n          >\n            <option value={Select.All}>All</option>\n            <option value={Select.Active}>Active</option>\n            <option value={Select.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  resetTodo: () => void;\n  todo: Todo;\n}\n\nexport const TodoModal: React.FC<Props> = ({ resetTodo, todo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  useEffect(() => {\n    if (userId) {\n      getUser(userId)\n        .then(setUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={resetTodo}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong> }\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback, useEffect, useState, useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { Select } from './types/Select';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoadingTodos, setIsLoadigTodos] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [select, setSelect] = useState(Select.All);\n  const [input, setInput] = useState('');\n\n  const handleSelectingTodo = useCallback((todo: Todo) => {\n    setSelectedTodo(todo);\n  }, []);\n\n  const loadTodos = async () => {\n    try {\n      setIsLoadigTodos(true);\n      const data = await getTodos();\n\n      setTodos(data);\n    } finally {\n      setIsLoadigTodos(false);\n    }\n  };\n\n  useEffect(\n    () => {\n      loadTodos();\n    }, [],\n  );\n\n  const handleSelectedTodos = useMemo(() => {\n    let visibleTodos: Todo[] = [...todos];\n\n    switch (select) {\n      case Select.Active:\n        visibleTodos = visibleTodos.filter(todo => todo.completed === false);\n        break;\n\n      case Select.Completed:\n        visibleTodos = visibleTodos.filter(todo => todo.completed === true);\n        break;\n\n      case Select.All:\n      default:\n        break;\n    }\n\n    visibleTodos = visibleTodos.filter(({ title }) => title.toLowerCase().includes(input.toLowerCase()));\n\n    return visibleTodos;\n  }, [select, todos, input]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onSelect={setSelect} onChange={setInput} />\n            </div>\n\n            <div className=\"block\">\n              {isLoadingTodos\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={handleSelectedTodos}\n                    onSelectTodo={handleSelectingTodo}\n                    selectedTodoId={selectedTodo?.id}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          resetTodo={() => setSelectedTodo(null)}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}